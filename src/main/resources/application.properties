spring.datasource.url=jdbc:postgresql://localhost:5432/sometest
spring.datasource.username=postgres
spring.datasource.password=postgres

# spring.main.allow-bean-definition-overriding=true
# Hibernate properties
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql = false
#spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.schema_update.unique_constraint_strategy=RECREATE_QUIETLY


spring.data.mongodb.host=127.0.0.1
spring.data.mongodb.port=27017
spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.username=<username specified on MONGO_INITDB_ROOT_USERNAME>
#spring.data.mongodb.password=<password specified on MONGO_INITDB_ROOT_PASSWORD>
spring.data.mongodb.database=local
spring.data.mongodb.auto-index-creation=true


spring.freemarker.expose-request-attributes=true


#security.oauth2.client.clientId=755674189622-2c29u9q584fif2amsj9lotrcfkvkv3ao.apps.googleusercontent.com#
#security.oauth2.client.clientSecret=oxD8Y6uKa2_ahal0noJ2LQ_x
#security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
#security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
#security.oauth2.client.clientAuthenticationScheme=form
#security.oauth2.client.scope=openid,email,profile
#security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
#security.oauth2.resource.preferTokenInfo=true

server.port=8080